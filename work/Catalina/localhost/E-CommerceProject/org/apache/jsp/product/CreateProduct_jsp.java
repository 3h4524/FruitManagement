/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-03-23 02:13:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.product;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class CreateProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1740052119710L));
    _jspx_dependants.put("jar:file:/C:/Users/LEGION/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602848772000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Add Product</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary: #4361ee;\r\n");
      out.write("            --primary-hover: #3a56d4;\r\n");
      out.write("            --secondary: #2b2d42;\r\n");
      out.write("            --success: #2ecc71;\r\n");
      out.write("            --success-hover: #27ae60;\r\n");
      out.write("            --danger: #e74c3c;\r\n");
      out.write("            --danger-hover: #c0392b;\r\n");
      out.write("            --light-gray: #f8f9fa;\r\n");
      out.write("            --border: #e1e4e8;\r\n");
      out.write("            --text: #333;\r\n");
      out.write("            --text-light: #666;\r\n");
      out.write("            --white: #ffffff;\r\n");
      out.write("            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            --shadow-hover: 0 8px 15px rgba(0, 0, 0, 0.15);\r\n");
      out.write("            --radius: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        * {\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Poppins', Arial, sans-serif;\r\n");
      out.write("            background-color: var(--light-gray);\r\n");
      out.write("            color: var(--text);\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1, h2 {\r\n");
      out.write("            color: var(--secondary);\r\n");
      out.write("            margin: 30px 0;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: 30px auto;\r\n");
      out.write("            padding: 0 15px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-box {\r\n");
      out.write("            background: var(--white);\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            box-shadow: var(--shadow);\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: separate;\r\n");
      out.write("            border-spacing: 0 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            color: var(--secondary);\r\n");
      out.write("            width: 30%;\r\n");
      out.write("            vertical-align: top;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td {\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            border: 1px solid var(--border);\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-family: 'Poppins', Arial, sans-serif;\r\n");
      out.write("            transition: border 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: var(--primary);\r\n");
      out.write("            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 12px 20px;\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            font-family: 'Poppins', Arial, sans-serif;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            box-shadow: var(--shadow);\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn:hover {\r\n");
      out.write("            background: var(--primary-hover);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: var(--shadow-hover);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a {\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin: 15px 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            color: var(--primary-hover);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .success {\r\n");
      out.write("            background-color: rgba(46, 204, 113, 0.1);\r\n");
      out.write("            color: var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .error {\r\n");
      out.write("            background-color: rgba(231, 76, 60, 0.1);\r\n");
      out.write("            color: var(--danger);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Modal styling */\r\n");
      out.write("        .modal {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background: rgba(0, 0, 0, 0.5);\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal.show {\r\n");
      out.write("            display: flex;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-content {\r\n");
      out.write("            background: var(--white);\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            width: 90%;\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            box-shadow: var(--shadow-hover);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-content h2 {\r\n");
      out.write("            margin-top: 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-content p {\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-content p b {\r\n");
      out.write("            color: var(--secondary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close {\r\n");
      out.write("            color: var(--danger);\r\n");
      out.write("            float: right;\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close:hover {\r\n");
      out.write("            color: var(--danger-hover);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("            margin-top: 25px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .confirm {\r\n");
      out.write("            background: var(--success);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            font-family: 'Poppins', Arial, sans-serif;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .confirm:hover {\r\n");
      out.write("            background: var(--success-hover);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cancel {\r\n");
      out.write("            background: var(--danger);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: var(--radius);\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            font-family: 'Poppins', Arial, sans-serif;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cancel:hover {\r\n");
      out.write("            background: var(--danger-hover);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Responsive adjustments */\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .container {\r\n");
      out.write("                padding: 15px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .form-box {\r\n");
      out.write("                padding: 20px 15px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            table {\r\n");
      out.write("                border-spacing: 0 10px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            th, td {\r\n");
      out.write("                display: block;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                padding: 3px 0;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            th {\r\n");
      out.write("                font-weight: 600;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input, button, .btn {\r\n");
      out.write("                padding: 10px;\r\n");
      out.write("                font-size: 14px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .modal-content {\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("                width: 95%;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("        function showConfirmation() {\r\n");
      out.write("            const fields = [\"name\", \"price\", \"size\", \"description\", \"stock\", \"importDate\"];\r\n");
      out.write("            for (let field of fields) {\r\n");
      out.write("                if (document.getElementById(field).value.trim() === \"\") {\r\n");
      out.write("                    alert(\"Please fill in all required fields!\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            document.getElementById(\"confirmName\").innerText = document.getElementById(\"name\").value;\r\n");
      out.write("            document.getElementById(\"confirmPrice\").innerText = document.getElementById(\"price\").value;\r\n");
      out.write("            document.getElementById(\"confirmSize\").innerText = document.getElementById(\"size\").value;\r\n");
      out.write("            document.getElementById(\"confirmDescription\").innerText = document.getElementById(\"description\").value;\r\n");
      out.write("            document.getElementById(\"confirmStock\").innerText = document.getElementById(\"stock\").value;\r\n");
      out.write("            document.getElementById(\"confirmImageURL\").innerText = document.getElementById(\"imageURL\").value || \"N/A\";\r\n");
      out.write("            document.getElementById(\"confirmImportDate\").innerText = document.getElementById(\"importDate\").value;\r\n");
      out.write("            document.getElementById(\"confirmationModal\").classList.add(\"show\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function closeModal() {\r\n");
      out.write("            document.getElementById(\"confirmationModal\").classList.remove(\"show\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function submitForm() {\r\n");
      out.write("            document.getElementById(\"productForm\").submit();\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/header.jsp", out, false);
      out.write("\r\n");
      out.write("<h1>Product Management</h1>\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"form-box\">\r\n");
      out.write("        <form id=\"productForm\" action=\"products\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"action\" value=\"create\"/>\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Product Name:</th>\r\n");
      out.write("                    <td><input type=\"text\" id=\"name\" name=\"name\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Price:</th>\r\n");
      out.write("                    <td><input type=\"number\" id=\"price\" name=\"price\" step=\"0.01\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Size:</th>\r\n");
      out.write("                    <td><input type=\"text\" id=\"size\" name=\"size\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Description:</th>\r\n");
      out.write("                    <td><input type=\"text\" id=\"description\" name=\"description\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Stock:</th>\r\n");
      out.write("                    <td><input type=\"number\" id=\"stock\" name=\"stock\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Image URL:</th>\r\n");
      out.write("                    <td><input type=\"text\" id=\"imageURL\" name=\"imageURL\"/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Import Date:</th>\r\n");
      out.write("                    <td><input type=\"datetime-local\" id=\"importDate\" name=\"importDate\" required/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            <button type=\"button\" class=\"btn\" onclick=\"showConfirmation()\">Create Product</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/products\">← Back to Product List</a>\r\n");
      out.write("\r\n");
      out.write("<div id=\"confirmationModal\" class=\"modal\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("        <span class=\"close\" onclick=\"closeModal()\">&times;</span>\r\n");
      out.write("        <h2>Confirm Product Details</h2>\r\n");
      out.write("        <p><b>Product Name:</b> <span id=\"confirmName\"></span></p>\r\n");
      out.write("        <p><b>Price:</b> <span id=\"confirmPrice\"></span></p>\r\n");
      out.write("        <p><b>Size:</b> <span id=\"confirmSize\"></span></p>\r\n");
      out.write("        <p><b>Description:</b> <span id=\"confirmDescription\"></span></p>\r\n");
      out.write("        <p><b>Stock:</b> <span id=\"confirmStock\"></span></p>\r\n");
      out.write("        <p><b>Image URL:</b> <span id=\"confirmImageURL\"></span></p>\r\n");
      out.write("        <p><b>Import Date:</b> <span id=\"confirmImportDate\"></span></p>\r\n");
      out.write("        <div class=\"buttons\">\r\n");
      out.write("            <button class=\"confirm\" onclick=\"submitForm()\">Confirm</button>\r\n");
      out.write("            <button class=\"cancel\" onclick=\"closeModal()\">Cancel</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /product/CreateProduct.jsp(319,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty message}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("    <div class=\"message success\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</div>\r\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /product/CreateProduct.jsp(322,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty error}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("    <div class=\"message error\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</div>\r\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }
}
