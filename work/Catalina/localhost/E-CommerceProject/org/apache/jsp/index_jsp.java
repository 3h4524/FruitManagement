/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-03-23 01:17:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Chào Mừng Đến Với Fruitiverse</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Green Theme matching paste.txt CSS variables */\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary-color: #2e8b57;\r\n");
      out.write("            --primary-light: #3c9d74;\r\n");
      out.write("            --primary-dark: #247048;\r\n");
      out.write("            --accent-color: #FFA500;\r\n");
      out.write("            --text-color: #333;\r\n");
      out.write("            --light-gray: #f5f5f5;\r\n");
      out.write("            --white: #fff;\r\n");
      out.write("            --border-color: #e0e0e0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            overflow: hidden; /* No scrolling */\r\n");
      out.write("            height: 100vh; /* Full viewport height */\r\n");
      out.write("            background: url('https://img.freepik.com/free-photo/top-view-sour-green-tangerines-light-background_140725-79917.jpg?t=st=1742448384~exp=1742451984~hmac=682f23b8937da51515e6545b44bcec399a9a287f9942e84ae1468b1c732b6e65&w=1380') no-repeat center center fixed;\r\n");
      out.write("            background-size: cover; /* Cover entire screen */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .text-green {\r\n");
      out.write("            color: var(--primary-color); /* Green text */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-green {\r\n");
      out.write("            border-color: var(--primary-color);\r\n");
      out.write("            background-color: var(--white);\r\n");
      out.write("            color: var(--primary-color);\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("            font-size: 1.5rem; /* Larger button text */\r\n");
      out.write("            padding: 15px 30px; /* Larger padding */\r\n");
      out.write("            border-radius: 10px; /* Rounded corners */\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(46, 139, 87, 0.6); /* Green glow */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-green:hover {\r\n");
      out.write("            background-color: var(--primary-dark); /* Darker green on hover */\r\n");
      out.write("            border-color: var(--primary-dark);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            box-shadow: 0 6px 16px rgba(46, 139, 87, 0.8); /* Stronger glow on hover */\r\n");
      out.write("            transform: translateY(-2px); /* Slight lift effect on hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .intro-text {\r\n");
      out.write("            color: var(--white); /* White text */\r\n");
      out.write("            font-size: 1.25rem; /* Larger paragraph text */\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(46, 139, 87, 0.7); /* Green shadow for contrast */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .intro-title {\r\n");
      out.write("            color: var(--white); /* White text */\r\n");
      out.write("            font-size: 3rem; /* Larger title */\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-shadow: 3px 3px 6px rgba(46, 139, 87, 0.8); /* Stronger green shadow */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Adding a semi-transparent overlay to improve text readability */\r\n");
      out.write("        .content-overlay {\r\n");
      out.write("            background-color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container h-100 d-flex align-items-center justify-content-center\">\r\n");
      out.write("    <div class=\"col-md-8 text-center content-overlay\">\r\n");
      out.write("        <h2 class=\"intro-title mb-4\">Chào Mừng Đến Với Fruitiverse</h2>\r\n");
      out.write("        <p class=\"intro-text mb-5\">\r\n");
      out.write("            Fruitiverse - Shop trái cây tươi ngon mỗi ngày! Chúng tôi tự hào mang đến những loại trái cây chất lượng cao, an toàn và giàu dinh dưỡng. Hãy khám phá thế giới trái cây tươi mát cùng chúng tôi!\r\n");
      out.write("        </p>\r\n");
      out.write("        <a href=\"");
      out.print( request.getContextPath());
      out.write("/products?action=find\" class=\"btn btn-green\">\r\n");
      out.write("            Bắt Đầu Mua Sắm\r\n");
      out.write("        </a>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
